addpath(genpath('..'));
addpath(genpath('..\geometry'));
c1=[-1,3,4];
c2=[5,1,-1];
c3=[2,0,1];
c4=[2,5,3];
r1=1;
r2=1.5;
r3=1;
r4=0.5;
c12=c2-c1;
c12=c12/norm(c12);
[slab,success]=drawMedialSlab(c1,c2,c3,r1,r2,r3,180,64,false,true,true,'FaceColor','blue','drawSphere',true);
tri0=Triangle(slab.V1_UP,slab.V2_UP,slab.V3_UP);
tri1=Triangle(slab.V1_DOWN,slab.V2_DOWN,slab.V3_DOWN);
bd=tri0.getBounds();
draw3DBoundingBox(bd.pMin(1),bd.pMin(2),bd.pMin(3),bd.pMax(1),bd.pMax(2),bd.pMax(3),'color','green');
bd=tri1.getBounds();
draw3DBoundingBox(bd.pMin(1),bd.pMin(2),bd.pMin(3),bd.pMax(1),bd.pMax(2),bd.pMax(3),'color','black');
% drawPartMedialCone(c1,c2,r1,r2,slab.V1_UP,slab.V1_DOWN,slab.V2_UP,slab.V2_DOWN,slab.cv12,c12,slab.radian12,m,n,'drawSphere',false,'drawLine',false,'FaceColor','cyan');
% drawDiskSegment(slab.slabCone12.smallCenter,slab.slabCone12.base,c12,cv12,radian12,'FaceColor','magenta');
% hold on;
% [bottom,top,keys]=computeBoundBoxForDiscSegment(slab.slabCone12.smallCenter,slab.slabCone12.base,c12,cv12,radian12);
% draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color','red');
% hold on;
% drawDiskSegment(slab.slabCone12.bigCenter,slab.slabCone12.top,c12,cv12,radian12,'FaceColor','magenta');
% [bottom,top,keys]=computeBoundBoxForDiscSegment(slab.slabCone12.bigCenter,slab.slabCone12.top,c12,cv12,radian12);
% draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color','blue');
% hold on;
% [bottom,top]=computeBoundBoxForPartCone(slab.slabCone12,slab.cv12,slab.radian12);
% draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color','magenta');
hold on;
% [bottom,top]=computeBoundBoxForPartCone(slab.slabCone13,slab.cv13,slab.radian13);
% draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color','blue');
% hold on;
% [bottom,top]=computeBoundBoxForPartCone(slab.slabCone23,slab.cv23,slab.radian23);
% draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color','red');
[slab1,success]=drawMedialSlab(c1,c2,c4,r1,r2,r4,180,64,false,true,true,'drawTriangle',false,'drawSphere',true,'FaceColor','green');

q1=java.util.HashMap();
q1.put('u',slab.cv12);
q1.put('radian',slab.radian12);
q2=java.util.HashMap();
q2.put('u',slab1.cv12);
q2.put('radian',slab1.radian12);
stricts=java.util.Stack();
stricts.push(q1);
stricts.push(q2);
result=mergeStricts(stricts,c12);
for i=0:result.size()-1
    p=result.get(i);
    u=transpose(p.get('u'));
    radian=p.get('radian');
    drawPartMedialCone(c1,c2,r1,r2,slab.V1_UP,slab.V1_DOWN,slab.V2_UP,slab.V2_DOWN,u,c12,radian,m,n,'drawSphere',false,'drawLine',false,'FaceColor','magenta');
    [bottom,top]=computeBoundBoxForPartCone(slab.slabCone12,u,radian);
    draw3DBoundingBox(bottom(1),bottom(2),bottom(3),top(1),top(2),top(3),'color',[1  ,0.5   ,0]);
end
hold on;
axis equal;
grid off;
hold off;
axis off;
light('Color',[0.8, 0.8, 0.8],'Position',[10 10 -10],'Style','infinite');
camlight;